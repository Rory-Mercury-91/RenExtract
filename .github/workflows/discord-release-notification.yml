name: Discord Release Notification

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag de la release (ex: v1.2.7)'
        required: true
        default: 'v1.2.7'

jobs:
  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract Version
        id: version
        run: |
          # Utiliser le tag de l'√©v√©nement release ou l'input manuel
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.tag_name }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Extract Changelog
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Extraire la section du CHANGELOG pour cette version
          # Recherche flexible : accepte "## YYYY-MM-DD (vX.Y.Z)" ou "## YYYY-MM-DD (X.Y.Z)"
          awk -v ver="$VERSION" '
            BEGIN { 
              # Nettoyer la version (enlever le v si pr√©sent)
              gsub(/^v/, "", ver)
            }
            /^## [0-9]{4}-[0-9]{2}-[0-9]{2} \(/ {
              # Extraire la version entre parenth√®ses
              match($0, /\(v?([0-9]+\.[0-9]+\.[0-9]+)\)/, arr)
              if (arr[1] == ver) {
                started = 1
                next
              } else if (started) {
                exit
              }
            }
            started { print }
          ' CHANGELOG.md > changelog_extract.txt
          
          # V√©rifier si le changelog a √©t√© extrait
          echo "=== DEBUG: Contenu du changelog extrait ==="
          cat changelog_extract.txt
          echo "=== FIN DEBUG ==="
          
          if [ ! -s changelog_extract.txt ]; then
            echo "ATTENTION: Changelog vide pour $VERSION" >&2
            echo "Contenu disponible dans les prochaines releases." > changelog_extract.txt
          fi
          
          # Limiter √† 1000 caract√®res pour Discord field (limite: 1024)
          head -c 1000 changelog_extract.txt > changelog_short.txt
          
          # √âchapper les caract√®res JSON et formater pour Discord
          CHANGELOG_TEXT=$(cat changelog_short.txt | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "text=$CHANGELOG_TEXT" >> $GITHUB_OUTPUT
          echo "=== DEBUG CHANGELOG_TEXT: $CHANGELOG_TEXT"
          
          # Extraire un r√©sum√© court (premi√®re ligne de chaque cat√©gorie)
          SUMMARY=$(awk '/^### / { if (count++ < 3) print "‚Ä¢ " $0 }' changelog_extract.txt | sed 's/### //' | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "summary=$SUMMARY" >> $GITHUB_OUTPUT
          echo "=== DEBUG SUMMARY: $SUMMARY"

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          VERSION: ${{ steps.version.outputs.version }}
          VERSION_NUMBER: ${{ steps.version.outputs.version_number }}
        run: |
          # Lire le changelog et le r√©sum√© depuis les fichiers
          CHANGELOG_RAW=$(cat changelog_short.txt)
          SUMMARY_RAW=$(awk '/^### / { if (count++ < 3) print "‚Ä¢ " $0 }' changelog_extract.txt | sed 's/### //')
          
          # Construire le JSON avec jq pour √©chappement correct
          jq -n \
            --arg username "RenExtract Release Bot" \
            --arg avatar "https://github.com/Rory-Mercury-91.png" \
            --arg version "$VERSION" \
            --arg version_num "$VERSION_NUMBER" \
            --arg summary "$SUMMARY_RAW" \
            --arg changelog "$CHANGELOG_RAW" \
            --arg timestamp "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)" \
            '{
              "username": $username,
              "avatar_url": $avatar,
              "embeds": [{
                "title": ("üöÄ RenExtract " + $version + " - Nouvelle Version Disponible !"),
                "description": "**Une mise √† jour importante de RenExtract est maintenant disponible.**\n\n",
                "color": 5814783,
                "fields": [
                  {
                    "name": "‚ú® Points Cl√©s de cette Version",
                    "value": $summary,
                    "inline": false
                  },
                  {
                    "name": "üìù Changements Complets",
                    "value": $changelog,
                    "inline": false
                  },
                  {
                    "name": "‚¨áÔ∏è T√©l√©chargements",
                    "value": ("**Windows** : [üíæ T√©l√©charger](https://github.com/Rory-Mercury-91/RenExtract/releases/download/" + $version + "/RenExtract-" + $version + "-Windows.zip)\n**Linux** : [üíæ T√©l√©charger](https://github.com/Rory-Mercury-91/RenExtract/releases/download/" + $version + "/RenExtract-" + $version + "-Linux.tar.gz)"),
                    "inline": false
                  },
                  {
                    "name": "üîó Liens Utiles",
                    "value": ("üì¶ [Page de la Release](https://github.com/Rory-Mercury-91/RenExtract/releases/tag/" + $version + ")\nüìù [CHANGELOG Complet](https://github.com/Rory-Mercury-91/RenExtract/blob/main/CHANGELOG.md)\nüêõ [Signaler un Bug](https://github.com/Rory-Mercury-91/RenExtract/issues)"),
                    "inline": false
                  }
                ],
                "footer": {
                  "text": ("RenExtract v" + $version_num + " ‚Ä¢ Production Ready ‚Ä¢ Merci de votre soutien !"),
                  "icon_url": $avatar
                },
                "timestamp": $timestamp
              }]
            }' > discord_payload.json
          
          # Envoyer le JSON √† Discord
          curl -X POST "$DISCORD_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d @discord_payload.json

