name: Discord Release Notification

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag de la release (ex: v1.2.7)'
        required: true
        default: 'v1.2.7'

jobs:
  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract Version
        id: version
        run: |
          # Utiliser le tag de l'√©v√©nement release ou l'input manuel
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.tag_name }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Extract Changelog
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Extraire la section du CHANGELOG pour cette version
          awk "/## [0-9]{4}-[0-9]{2}-[0-9]{2} \($VERSION\)/,/^## [0-9]{4}-[0-9]{2}-[0-9]{2}/ {
            if (/^## [0-9]{4}-[0-9]{2}-[0-9]{2}/ && !started) {
              started=1
              next
            }
            if (/^## [0-9]{4}-[0-9]{2}-[0-9]{2}/ && started) {
              exit
            }
            if (started) print
          }" CHANGELOG.md > changelog_extract.txt
          
          # Limiter √† 1800 caract√®res pour Discord embed
          head -c 1800 changelog_extract.txt > changelog_short.txt
          
          # √âchapper les caract√®res JSON
          CHANGELOG_TEXT=$(cat changelog_short.txt | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "text=$CHANGELOG_TEXT" >> $GITHUB_OUTPUT

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          VERSION: ${{ steps.version.outputs.version }}
          VERSION_NUMBER: ${{ steps.version.outputs.version_number }}
          CHANGELOG: ${{ steps.changelog.outputs.text }}
        run: |
          curl -X POST "$DISCORD_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d '{
              "username": "RenExtract Release Bot",
              "avatar_url": "https://github.com/Rory-Mercury-91.png",
              "embeds": [{
                "title": "üöÄ RenExtract '"$VERSION"' - Nouvelle Version !",
                "description": "Une nouvelle version de RenExtract est disponible !",
                "color": 5814783,
                "fields": [
                  {
                    "name": "üìù Changelog",
                    "value": "'"$CHANGELOG"'",
                    "inline": false
                  },
                  {
                    "name": "‚¨áÔ∏è T√©l√©chargement",
                    "value": "[ü™ü Windows](https://github.com/Rory-Mercury-91/RenExtract/releases/download/'"$VERSION"'/RenExtract-'"$VERSION"'-Windows.zip) ‚Ä¢ [üêß Linux](https://github.com/Rory-Mercury-91/RenExtract/releases/download/'"$VERSION"'/RenExtract-'"$VERSION"'-Linux.tar.gz)",
                    "inline": false
                  },
                  {
                    "name": "üîó Liens",
                    "value": "[üì¶ Release GitHub](https://github.com/Rory-Mercury-91/RenExtract/releases/tag/'"$VERSION"') ‚Ä¢ [üìù CHANGELOG](https://github.com/Rory-Mercury-91/RenExtract/blob/main/CHANGELOG.md)",
                    "inline": false
                  }
                ],
                "footer": {
                  "text": "RenExtract v'"$VERSION_NUMBER"' ‚Ä¢ Production Ready"
                },
                "timestamp": "'"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"'"
              }]
            }'

